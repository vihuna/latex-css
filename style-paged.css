/*!
 * LaTeX.css Paged Layout using Paged.js
 *
 * Source: https://github.com/vincentdoerig/latex-css
 * Licensed under MIT (https://github.com/vincentdoerig/latex-css/blob/master/LICENSE)
 */

:root {
  --body-background-color: hsl(0, 0%, 91%);
  --page-shadow-color: hsl(0, 0%, 81%);
}

/* Styles for document printing (also screen display) */
@media print {
  /**
   * NOTE: It seems variables don't work inside `@page` because browser's
   * implementation of custom properties is still incomplete.
   * Ref: https://stackoverflow.com/a/44738574
   */
  @page {
    /* Default LaTeX.css (A4) page margins */
    size: A4 portrait;
    margin-top: 85pt;
    margin-right: 85pt;
    margin-bottom: 85pt;
    margin-left: 85pt;
    @bottom-center{
      content: counter(page);
      /* Adjust div.pagedjs_margin-bottom-center for page numbers */
      flex-direction: column;
      /* footskip = 29.888pt = 11pt + 18.888pt */
      padding-top: 18.888pt;
    }
  }

  body {
    /* ~ 11pt font-size */
    font-size: 0.913rem;
    /* One and half line spacing */
    line-height: 1.3;
    /* Reset LaTeX.css style properties */
    max-width: none;
    min-height: 0px;
    padding: 0px;
  }

  /**
   * By default, sidenote width automatically adapts to margin width (using
   * Paged.js variables `--pagedjs-margin-left` and `--pagedjs-margin-right`).
   * The width of left and right margins must be greater than 30pt:
   * 10pt separation from the document text and 20pt inner-outer blank margin.
   */
  .sidenote {
    display: none;
  }
  body.sidenotes-outer .sidenote {
    --sidenote-width-default: calc(var(--pagedjs-margin-right) - 30pt);
    --sidenote-margin-default: calc(20pt - var(--pagedjs-margin-right));
    --sidenote-width-custom: min(var(--sidenote-width), var(--sidenote-width-default));
    --sidenote-margin: calc(0pt - var(--sidenote-width-custom) - 10pt);
    display: block;
    width: var(--sidenote-width-custom, var(--sidenote-width-default));
    margin-right: var(--sidenote-margin, var(--sidenote-margin-default));
  }
  body.sidenotes-outer .sidenote.left {
    display: none;
  }
  body.sidenotes-inner .sidenote.left {
    --sidenote-width-default: calc(var(--pagedjs-margin-left) - 30pt);
    --sidenote-margin-default: calc(20pt - var(--pagedjs-margin-left));
    --sidenote-width-custom: min(var(--sidenote-width), var(--sidenote-width-default));
    --sidenote-margin: calc(0pt - var(--sidenote-width-custom) - 10pt);
    display: block;
    width: var(--sidenote-width-custom, var(--sidenote-width-default));
    margin-left: var(--sidenote-margin, var(--sidenote-margin-default));
  }

  /**
   * It seems Paged.js still doesn't support `counters()` or there is some bug
   * when the ToC is split during pagination.
   * Here `counters()` is replaced with with a complex `counter()` construction,
   * with 3 levels of sectioning, like in LaTeX documents (excluding paragraphs):
   * `sec-level-1`, `sec-level-2`, `sec-level-3`.
   */

  /* ToC Level-1 */
  nav > ol {
    counter-reset: sec-level-1;
    /* No padding for ToC first-level sections in LaTeX default articles */
    padding-left: 0;
  }
  nav > ol > li {
    /* ToC first-level sections are in boldface type in LaTeX default articles */
    counter-increment: sec-level-1;
  }
  nav > ol > li::before {
    content: counter(sec-level-1);
    font-weight: bold;
  }
  nav > ol > li > a {
    font-weight: bold;
  }
  /* ToC Level-2 */
  nav > ol > li > ol {
    counter-reset: sec-level-2;
  }
  nav > ol > li > ol > li {
    counter-increment: sec-level-2;
  }
  nav > ol > li > ol > li::before {
    content: counter(sec-level-1) '.' counter(sec-level-2);
  }
  /* ToC Level-3 */
  nav > ol > li > ol > li > ol {
    counter-reset: sec-level-3;
  }
  nav > ol > li > ol > li > ol > li {
    counter-increment: sec-level-3;
  }
  nav > ol > li > ol > li > ol > li::before {
    content: counter(sec-level-1) '.' counter(sec-level-2) '.' counter(sec-level-3);
  }

  /**
   * Add page numbers to the ToC.
   * `latexcss-paged.js` must be loaded if `toc-page-numbers` class is used.
   */
  .toc-page-numbers nav > ol li::before {
    float: left;
  }
  .toc-page-numbers nav li > a {
    display: flex;
    text-decoration-line: none;
  }
  /* Page numbers */
  .toc-page-numbers nav li > a::after {
    content: target-counter(attr(href), page);
    flex: 0 0 5%;
    align-self: flex-end;
    text-align: right;
    text-decoration-line: underline;
    padding-left: 0.85rem;
    background-color: var(--body-bg-color);
  }
  /* Add an extra gap between the ToC entry text and the page number container. */
  .toc-page-numbers nav div.toc-item-container {
    flex: 0 1 95%;
    padding-right: 1rem;
  }
  .toc-page-numbers nav > ol > li > ol span.dotted-line {
    background-color: var(--body-bg-color);
  }
  .toc-page-numbers nav > ol > li > ol span.dotted-line::after {
    content: ".............................................................................................................................";
    float: left;
    width: 0;
    letter-spacing: 5pt;
    color: var(--body-color);
  }
  /* Hide the fragment of dotted line outside the navigation container */
  .toc-page-numbers nav > ol > li > ol li {
    overflow: hidden;
  }
  .toc-page-numbers nav span.toc-item-content {
    background-color: var(--body-bg-color);
    text-decoration-line: underline;
  }
  /**
   * Make an "inline gap" before dotted line. It has been used this solution
   * instead of [a more natural] `padding-right` to `.toc-item-content`
   * because of rendering differences between browsers. Also, tries to avoid
   * line breaks just before the dotted line.
   */
  .toc-page-numbers nav > ol > li > ol span.dotted-line::before {
    content: "\00A0"; /* non-breaking space */
    margin-left: 0.2em;
  }

  /**
   * Overwrite Prism.css styles to allow text wrapping inside `pre`, `code`
   * elements, and avoid scroll bars
   */
  code,
  pre,
  code[class*='language-'],
  pre[class*='language-'] {
    white-space: pre-wrap;
    overflow-wrap: break-word;
    overflow: visible; /* just in case the text wrapping fails */
  }
  :not(pre) > code[class*='language-'] {
    white-space: pre-wrap;
  }

  /* Allow text wrapping for long url's in the link text */
  a {
    overflow-wrap: break-word;
  }
  .toc a {
    overflow-wrap: normal;
  }

  /* Adjust end-of-proof symbol for paged layout */
  .proof::after {
    /**
     * This particular implementation has been chosen for three reasons:
     * 1. The sidenotes separation space has been decreased for the paged layout,
     * so end-of-proof symbol may overlap sidenotes.
     * 2. With this method, demonstration end sign behaviour is more similar to
     * `proof` environment style from `amsthm` package.
     * 3. Firefox has problems (like in ToC, but not exactly the same) with
     * paddings/margins for floating block elements inside paragraphs
     * (specifically, here the print layout is different from the screen layout
     * when using paddings/margins).
     * Note: U+25FE is not supported by either "Latin Modern" or "Libertinus"
     * fonts installed; their respective "math variants" are needed.
     */
    content: '\00A0\25FE';
    position: static;
    display: block;
    float: right;
    padding-top: 1pt;
  }

  /**
   * Avoid hyphenation: it seems Paged.js has some problems with hyphenation
   * while paginating the document.
   * Ref: https://gitlab.coko.foundation/pagedjs/pagedjs/-/issues/266
   */
  body,
  p {
    hyphens: none;
  }

  /* Document font size */
  .font-size-10 {
    font-size: 10pt;
  }
  .font-size-11 {
    font-size: 11pt;
  }
  .font-size-12 {
    font-size: 12pt;
  }

  /* Document line spacing */
  .line-height-single {
    line-height: normal;
  }
  .line-height-onehalf {
    line-height: 1.5;
  }
  .line-height-double {
    line-height: 2;
  }

}

/* Styles for screen document display */
@media screen, pagedjs-ignore {
  body {
    background-color: var(--body-background-color);
  }

  .pagedjs_page {
    background-color: var(--body-bg-color);
    box-shadow: 0 0 3px 1px var(--page-shadow-color);
    margin-top: 35px;
    margin-left: auto;
    margin-right: auto;
  }

  .pagedjs_page:last-of-type {
    margin-bottom: 35px;
  }
}
